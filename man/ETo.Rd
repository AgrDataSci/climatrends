% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ETo.R
\name{ETo}
\alias{ETo}
\alias{ETo.default}
\alias{ETo.array}
\alias{ETo.sf}
\title{Evapotranspiration}
\usage{
ETo(object, day.one, span, Kc = 1, ...)

\method{ETo}{default}(object, day.one, span, Kc = 1, lat = NULL, ...)

\method{ETo}{array}(object, day.one, span, Kc = 1, lat = NULL, ...)

\method{ETo}{sf}(object, day.one, span, Kc = 1, as.sf = TRUE, ...)
}
\arguments{
\item{object}{a data.frame (or object that can be coerced to data.frame) 
with geographical coordinates (lonlat), or an object of class \code{sf}
with geometry 'POINT' or 'POLYGON', or an \code{array} with two dimensions 
containing the temperature data, see details.}

\item{day.one}{a vector of class \code{Date} for the starting date to capture 
the climate data}

\item{span}{an integer or a vector with integers for the duration of the 
time series to be captured}

\item{Kc}{a numeric value for the crop factor for water requirement}

\item{...}{additional arguments passed to methods. See details.}

\item{lat}{a vector for the latitude (in Decimal degrees), used to compute 
mean daily percentage of annual daytime hours based on the latitude and month.
This is extracted automatically in the \code{sf} method. See details}

\item{as.sf}{logical, to return an object of class 'sf'}
}
\value{
The evapotranspiration in mm/day
}
\description{
Evapotranspiration using the Blaney-Criddle method. This is  
theoretical method used when no measured data on pan evaporation 
is available locally.
}
\details{
When \var{lat} is provided, it is combined with the month provided in 
 \var{day.one} to call for the system data \code{daylight} to find
 the correct value for \var{p} which represents the daily percentage
 of daytime hours in the given month and latitude. Otherwise \var{p} is set 
 to 0.27 as default.
 
The \code{array} method assumes that \var{object} contains climate data provided 
 from a local source; this requires a array with two dimensions, 1st dimension 
 contains the day temperature and 2nd dimension the night temperature, 
 see help("modis", "climatrends") for an example on input structure.

The \code{default} method and the \code{sf} method assumes that the climate data 
 will be fetched from an remote (cloud) \var{source}.

Additional arguments:

\code{source}: character for the source of climate data. Current remote \var{source} 
 is: 'nasapower'

\code{pars}: character vector for the temperature data to be fetched. If 
 \code{source} is 'nasapower'. The temperature can be adjusted to 2 m, the default,
 c("T2M_MAX", "T2M_MIN") or 10 m c("T10M_MAX", "T10M_MIN") 

\code{days.before}: optional, an integer for the number of days before 
 \var{day.one} to be included in the timespan.
}
\examples{
# Using local sources
data("modis", package = "climatrends")

day <- as.Date("2013-10-28", format = "\%Y-\%m-\%d")

ETo(modis, 
    day.one = day,
    span = 10,
    Kc = 0.92)
    
\donttest{
######################################

# Using remote sources 
# random geographic locations around bbox(11, 12, 55, 58)
set.seed(123)
lonlat <- data.frame(lon = runif(2, 11, 12),
                     lat = runif(2, 55, 58))

# random dates around 2018-05-15 and 2018-05-20
set.seed(321)
dates <- as.integer(runif(2, 17666, 17670))
dates <- as.Date(dates, origin = "1970-01-01")

# the evapotranspiration in the first 50 days after day.one
ETo(lonlat,
    day.one = dates,
    span = 50,
    lat = lonlat["lat"])
    
#######################################


# Objects of class 'sf'
data("lonlatsf", package = "climatrends")

dates <- as.Date(16700, origin = "1970-01-01")

ETo(lonlatsf,
    day.one = dates,
    span = 30,
    pars = c("T10M_MAX", "T10M_MIN"))

}

}
\references{
Brouwer C. & Heibloem M. (1986). Irrigation water management: 
Irrigation water needs. Food and Agriculture Organization of The 
United Nations, Rome, Italy. 
\url{http://www.fao.org/3/S2022E/s2022e00.htm}
}
\seealso{
Other temperature functions: 
\code{\link{GDD}()},
\code{\link{temperature}()}
}
\concept{temperature functions}
